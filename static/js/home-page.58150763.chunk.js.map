{"version":3,"file":"static/js/home-page.58150763.chunk.js","mappings":"yMACA,GAAgB,MAAQ,0BAA0B,MAAQ,2B,SCG3C,SAASA,EAAT,GAA2C,IAArBC,EAAoB,EAApBA,IAAKC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,KAC/C,OACE,iBAAKC,UAAWC,EAAAA,KAAhB,WACE,gBACED,UAAWC,EAAAA,MACXJ,IAAKA,EAAG,yCAAqCA,GAAQK,EACrDC,IAAKL,EACLM,QAAQ,UAEV,eAAIJ,UAAWC,EAAAA,MAAf,SAAyBH,GAAgBC,OCZ/C,MAA6B,2BAA7B,EAAqE,2BCGtD,SAASM,EAAT,GAA6B,IAAXC,EAAU,EAAVA,OACzBC,GAAWC,EAAAA,EAAAA,eACjB,OACE,eAAIR,UAAWC,EAAf,SACGK,GACCA,EAAOG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,YAAab,EAApB,EAAoBA,MAAOC,EAA3B,EAA2BA,KAA3B,OACT,eAAaC,UAAWC,EAAxB,UACE,SAAC,KAAD,CACEW,GAAI,CACFC,SAAS,WAAD,OAAaH,GACrBI,MAAO,CAAEC,KAAMR,IAHnB,UAME,SAACX,EAAD,CAAYC,IAAKc,EAAab,MAAOA,EAAOC,KAAMA,OAP7CW,U,qDCTnB,MAA4B,8BAA5B,EAAmE,2B,SCCpD,SAASM,EAAT,GAAuD,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACrD,OACE,iBAAKpB,UAAWC,EAAhB,WACE,mBACED,UAAWC,EACXoB,KAAK,SACLC,QAASJ,EACTK,WAAUJ,EAAO,GAJnB,mBAQA,mBACEnB,UAAWC,EACXoB,KAAK,SACLC,QAASL,EACTM,WAAUJ,EAAOC,GAJnB,uB,kHCVAI,EAAYC,IAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IAETC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAUO,GAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,EAAAA,GAAAA,MAAA,yHALG,kF,8JCPQ,SAASC,IACtB,OAA4BC,EAAAA,EAAAA,UAAS,MAArC,eAAO7B,EAAP,KAAe8B,EAAf,KACA,GAAwBD,EAAAA,EAAAA,UAAS,GAAjC,eAAOhB,EAAP,KAAakB,EAAb,MAEAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACIT,EAAAA,EAAAA,GAAY,0BAAD,OAA2BX,IAD1C,OACXb,EADW,OAEjB8B,EAAU9B,GAFO,2CAAH,qDAKhBiC,MACC,CAACpB,IAkBJ,OACE,8BACGb,IACC,iCACE,SAACD,EAAA,EAAD,CAAQC,OAAQA,EAAOkC,WACvB,SAACxB,EAAA,EAAD,CACEC,KAtBa,WACrBoB,GAAQ,SAAAvB,GAAK,OAAIA,EAAQ,KACzB2B,OAAOC,SAAS,CACdC,SAAU,SACVC,IAAK,KAmBC1B,KAfa,WACrBmB,GAAQ,SAAAvB,GAAK,OAAIA,EAAQ,KACzB2B,OAAOC,SAAS,CACdC,SAAU,SACVC,IAAK,KAYCzB,KAAMA,EACNC,WAAYd,EAAOuC,qB","sources":["webpack://goit-react-hw-05-movies/./src/components/Movies/MoviesItem/MoviesItem.module.scss?b7b9","components/Movies/MoviesItem/MoviesItem.jsx","webpack://goit-react-hw-05-movies/./src/components/Movies/Movies.module.scss?f7cd","components/Movies/Movies.jsx","webpack://goit-react-hw-05-movies/./src/components/Pagination/Pagination.module.scss?7fb8","components/Pagination/Pagination.jsx","services/moviesApi.js","views/HomePage/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"image\":\"MoviesItem_image__KoNtk\",\"title\":\"MoviesItem_title__Rrsmm\"};","import PropTypes from 'prop-types';\nimport noPoster from '../../../images/no_image_poster.png';\nimport s from './MoviesItem.module.scss';\n\nexport default function MoviesItem({ src, title, name }) {\n  return (\n    <div className={s.card}>\n      <img\n        className={s.image}\n        src={src ? `https://image.tmdb.org/t/p/w500${src}` : noPoster}\n        alt={title}\n        loading=\"lazy\"\n      />\n      <h2 className={s.title}>{title ? title : name}</h2>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"moviesList\":\"Movies_moviesList__ueqwJ\",\"moviesitem\":\"Movies_moviesitem__5C20G\"};","import { Link, useLocation } from 'react-router-dom';\nimport MoviesItem from './MoviesItem';\nimport s from './Movies.module.scss';\n\nexport default function Movies({ movies }) {\n  const location = useLocation();\n  return (\n    <ul className={s.moviesList}>\n      {movies &&\n        movies.map(({ id, poster_path, title, name }) => (\n          <li key={id} className={s.moviesitem}>\n            <Link\n              to={{\n                pathname: `/movies/${id}`,\n                state: { from: location },\n              }}\n            >\n              <MoviesItem src={poster_path} title={title} name={name} />\n            </Link>\n          </li>\n        ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonBox\":\"Pagination_buttonBox__+w59T\",\"button\":\"Pagination_button__-Sbbg\"};","import s from './Pagination.module.scss';\n\nexport default function Pagination({ next, prev, page, totalPages }) {\n  return (\n    <div className={s.buttonBox}>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={prev}\n        disabled={page > 1 ? false : true}\n      >\n        PREV\n      </button>\n      <button\n        className={s.button}\n        type=\"button\"\n        onClick={next}\n        disabled={page < totalPages ? false : true}\n      >\n        NEXT\n      </button>\n    </div>\n  );\n}\n","import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '0c445e222255734e4e402081285b3802',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильмов по запросу`);\n  }\n}\n","import { useEffect, useState } from 'react';\nimport Movies from '../../components/Movies';\nimport Pagination from '../../components/Pagination';\nimport { fetchMovies } from '../../services/moviesApi';\n\nexport default function HomePage() {\n  const [movies, setMovies] = useState(null);\n  const [page, setPage] = useState(1);\n\n  useEffect(() => {\n    const asyncFetch = async () => {\n      const movies = await fetchMovies(`/trending/all/day?page=${page}`);\n      setMovies(movies);\n    };\n\n    asyncFetch();\n  }, [page]);\n\n  const onNextBtnClick = () => {\n    setPage(state => state + 1);\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    });\n  };\n\n  const onPrevBtnClick = () => {\n    setPage(state => state - 1);\n    window.scrollTo({\n      behavior: 'smooth',\n      top: 0,\n    });\n  };\n\n  return (\n    <>\n      {movies && (\n        <>\n          <Movies movies={movies.results} />\n          <Pagination\n            next={onNextBtnClick}\n            prev={onPrevBtnClick}\n            page={page}\n            totalPages={movies.total_pages}\n          />\n        </>\n      )}\n    </>\n  );\n}\n"],"names":["MoviesItem","src","title","name","className","s","noPoster","alt","loading","Movies","movies","location","useLocation","map","id","poster_path","to","pathname","state","from","Pagination","next","prev","page","totalPages","type","onClick","disabled","getMovies","axios","baseURL","timeout","params","api_key","fetchMovies","q","data","toast","HomePage","useState","setMovies","setPage","useEffect","asyncFetch","results","window","scrollTo","behavior","top","total_pages"],"sourceRoot":""}