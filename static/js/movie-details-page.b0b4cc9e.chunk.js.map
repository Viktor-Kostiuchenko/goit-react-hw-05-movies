{"version":3,"file":"static/js/movie-details-page.b0b4cc9e.chunk.js","mappings":"oOAGMA,EAAYC,IAAAA,OAAa,CAC7BC,QAAS,+BACTC,QAAS,IAETC,OAAQ,CACNC,QAAS,sCAIN,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA2BC,GAA3B,kGAEoBP,EAAUO,GAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,gCAKHC,EAAAA,GAAAA,MAAA,yHALG,kF,+JCXP,GAAgB,MAAQ,4BAA4B,SAAW,+BAA+B,MAAQ,4BAA4B,QAAU,8BAA8B,MAAQ,4BAA4B,KAAO,2BAA2B,OAAS,6BAA6B,OAAS,6BAA6B,OAAS,6BAA6B,MAAQ,4BAA4B,MAAQ,4BAA4B,KAAO,2BAA2B,WAAa,iCAAiC,eAAiB,sC,SCI5f,SAASC,EAAT,GAAkC,IAAVC,EAAS,EAATA,MAC7BC,GAAQC,EAAAA,EAAAA,MAARD,IACR,OACE,iBAAKE,UAAWC,EAAAA,MAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,gBACED,UAAWC,EAAAA,MACXC,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxCC,EAENC,IAAKR,EAAMS,MACXC,QAAQ,YAGZ,iBAAKP,UAAWC,EAAAA,QAAhB,WACE,iBAAKD,UAAWC,EAAAA,UAAhB,WACE,gBAAID,UAAWC,EAAAA,MAAf,UACGJ,EAAMS,MAAQT,EAAMS,MAAQT,EAAMW,MACnC,kBAAMR,UAAWC,EAAAA,KAAjB,cAA2BJ,EAAMY,aAAaC,MAAM,EAAG,GAAvD,WAEF,eAAGV,UAAWC,EAAAA,OAAd,yBAEE,kBAAMD,UAAWC,EAAAA,OAAjB,UAAiD,GAArBJ,EAAMc,aAAlC,WAEF,gBAAIX,UAAWC,EAAAA,OAAf,oBAEGJ,EAAMe,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIN,EAAP,EAAOA,KAAP,OAChB,eAAaR,UAAWC,EAAAA,MAAxB,SACGO,GADMM,UAKb,eAAId,UAAWC,EAAAA,MAAf,qBACA,cAAGD,UAAWC,EAAAA,KAAd,SAAuBJ,EAAMkB,eAE/B,gBAAKf,UAAWC,EAAAA,SAAhB,UACE,gBAAID,UAAWC,EAAAA,WAAf,WACE,eAAID,UAAWC,EAAAA,eAAf,UACE,SAAC,KAAD,CAASe,GAAE,UAAKlB,EAAL,SAAX,qBAEF,eAAIE,UAAWC,EAAAA,eAAf,UACE,SAAC,KAAD,CAASe,GAAE,UAAKlB,EAAL,YAAX,kCC3Cd,IAAMmB,GAAWC,EAAAA,EAAAA,OAAK,kBACpB,iCAEIC,GAAcD,EAAAA,EAAAA,OAAK,kBACvB,gCAGa,SAASE,IACtB,IAAQC,GAAStB,EAAAA,EAAAA,MAATsB,KACAC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAO3B,EAAP,KAAc4B,EAAd,KAUA,OARAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAU,mCAAG,qGACGnC,EAAAA,EAAAA,GAAY,SAAD,OAAU8B,IADxB,OACXzB,EADW,OAEjB4B,EAAS5B,GAFQ,2CAAH,qDAIhB8B,MACC,CAACL,KAGF,gCACGzB,IAAS,SAACD,EAAD,CAAcC,MAAOA,KAE/B,UAAC,EAAA+B,SAAD,CAAUC,UAAU,sFAApB,WACE,SAAC,KAAD,CAAOR,KAAI,UAAKA,EAAL,SAAX,UACE,SAACJ,EAAD,OAEF,SAAC,KAAD,CAAOI,KAAI,UAAKA,EAAL,YAAX,UACE,SAACF,EAAD,c","sources":["services/moviesApi.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.scss?0a3a","components/MovieDetails/MovieDetails.jsx","views/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["import axios from 'axios';\nimport { toast } from 'react-toastify';\n\nconst getMovies = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  timeout: 1000,\n\n  params: {\n    api_key: '0c445e222255734e4e402081285b3802',\n  },\n});\n\nexport async function fetchMovies(q) {\n  try {\n    const { data } = await getMovies(q);\n    return data;\n  } catch (error) {\n    toast.error(`Нет фильмов по запросу`);\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movie\":\"MovieDetails_movie__0bvoo\",\"imageBox\":\"MovieDetails_imageBox__MrmJc\",\"image\":\"MovieDetails_image__VKciC\",\"infoBox\":\"MovieDetails_infoBox__hR8BP\",\"title\":\"MovieDetails_title__uAZ8x\",\"year\":\"MovieDetails_year__SUitU\",\"rating\":\"MovieDetails_rating__7CXA9\",\"result\":\"MovieDetails_result__YKJ92\",\"genres\":\"MovieDetails_genres__QPoYo\",\"genre\":\"MovieDetails_genre__uTXpS\",\"about\":\"MovieDetails_about__iPk+e\",\"text\":\"MovieDetails_text__0flRr\",\"additional\":\"MovieDetails_additional__iKgZw\",\"additionalItem\":\"MovieDetails_additionalItem__8ADB2\"};","import { NavLink, useRouteMatch } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport noPoster from '../../images/no_image_poster.png';\nimport s from './MovieDetails.module.scss';\n\nexport default function MovieDetails({ movie }) {\n  const { url } = useRouteMatch();\n  return (\n    <div className={s.movie}>\n      <div className={s.imageBox}>\n        <img\n          className={s.image}\n          src={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n              : noPoster\n          }\n          alt={movie.title}\n          loading=\"lazy\"\n        />\n      </div>\n      <div className={s.infoBox}>\n        <div className={s.infoAbout}>\n          <h3 className={s.title}>\n            {movie.title ? movie.title : movie.name}\n            <span className={s.year}>({movie.release_date.slice(0, 4)})</span>\n          </h3>\n          <p className={s.rating}>\n            USER SCORE:\n            <span className={s.result}>{movie.vote_average * 10}%</span>\n          </p>\n          <ul className={s.genres}>\n            GENRES:\n            {movie.genres.map(({ id, name }) => (\n              <li key={id} className={s.genre}>\n                {name}\n              </li>\n            ))}\n          </ul>\n          <h4 className={s.about}>ABOUT:</h4>\n          <p className={s.text}>{movie.overview}</p>\n        </div>\n        <div className={s.infoMore}>\n          <ul className={s.additional}>\n            <li className={s.additionalItem}>\n              <NavLink to={`${url}/cast`}>Cast</NavLink>\n            </li>\n            <li className={s.additionalItem}>\n              <NavLink to={`${url}/reviews`}>Reviews</NavLink>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { useParams, Route, useRouteMatch } from 'react-router-dom';\nimport { fetchMovies } from '../../services/moviesApi';\nimport MovieDetails from '../../components/MovieDetails';\n\nconst CastPage = lazy(() =>\n  import('../CastPage' /* webpackChunkName: \"cast\"*/),\n);\nconst ReviewsPage = lazy(() =>\n  import('../ReviewsPage' /* webpackChunkName: \"reviews\"*/),\n);\n\nexport default function MovieDetailsPage() {\n  const { path } = useRouteMatch();\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    const asyncFetch = async () => {\n      const movie = await fetchMovies(`movie/${movieId}`);\n      setMovie(movie);\n    };\n    asyncFetch();\n  }, [movieId]);\n\n  return (\n    <>\n      {movie && <MovieDetails movie={movie} />}\n\n      <Suspense fallback={<h2>ЗАГРУЖАЕМ...</h2>}>\n        <Route path={`${path}/cast`}>\n          <CastPage />\n        </Route>\n        <Route path={`${path}/reviews`}>\n          <ReviewsPage />\n        </Route>\n      </Suspense>\n    </>\n  );\n}\n"],"names":["getMovies","axios","baseURL","timeout","params","api_key","fetchMovies","q","data","toast","MovieDetails","movie","url","useRouteMatch","className","s","src","poster_path","noPoster","alt","title","loading","name","release_date","slice","vote_average","genres","map","id","overview","to","CastPage","lazy","ReviewsPage","MovieDetailsPage","path","movieId","useParams","useState","setMovie","useEffect","asyncFetch","Suspense","fallback"],"sourceRoot":""}